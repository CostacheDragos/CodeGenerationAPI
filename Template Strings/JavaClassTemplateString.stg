class(ClassName, Properties, Methods, OverriddenMethods, InheritedClassesNames, ImplementedInterfacesNames, FullPackagePath) ::= <<
$if(FullPackagePath)$package $FullPackagePath$;
$endif$
public class $ClassName$$if(InheritedClassesNames)$ extends$endif$ $InheritedClassesNames : {name | $name$}; separator=", "$$
                         if(ImplementedInterfacesNames)$ implements$endif$ $ImplementedInterfacesNames : {name | $name$}; separator=", "$ {
    // Generated Properties
    $Properties : {property | $property.accessModifier$ $property.type$ $property.name$}; separator="\n"$

    // Generated Methods
    $Methods : {method | $method.accessModifier$ $method.returnType$ $method.name$($method.parameters : {parameter | $parameter.type$ $parameter.name$}; separator=", "$) {
    throw new UnsupportedOperationException();
\} }; separator="\n"$
    // Overridden Methods
    $OverriddenMethods : {method | @Override$\n$$method.accessModifier$ $method.returnType$ $method.name$($method.parameters : {parameter | $parameter.type$ $parameter.name$}; separator=", "$) {
    throw new UnsupportedOperationException();
\} }; separator="\n"$

    // Setters & Getters
    $Properties : {property | $
            if(property.generateSetter)$void Set$property.name; format="cap"$($property.type$ newValue){ this.$property.name$ = newValue; \}$\n$$endif$
            }$
    $Properties : {property | $
            if(property.generateGetter)$$property.type$ Get$property.name; format="cap"$(){ return this.$property.name$; \}$\n$$endif$
            }$
}
>>

interface(InterfaceName, Properties, PrivateMethods, PublicMethods, InheritedInterfacesNames, FullPackagePath) ::= <<
$if(FullPackagePath)$package $FullPackagePath$;
$endif$
public interface $InterfaceName$ $if(InheritedInterfacesNames)$extends$endif$ $InheritedInterfacesNames : {name | $name$}; separator=", "$ {
    // Generated Properties
    $Properties : {property | $property.type$ $property.name$;}; separator="\n"$

    // Generated Methods
    $PrivateMethods : {method | $method.accessModifier$ $method.returnType$ $method.name$($method.parameters : {parameter | $parameter.type$ $parameter.name$}; separator=", "$) {
    throw new UnsupportedOperationException();
\} }; separator="\n"$
    $PublicMethods : {method | $method.accessModifier$ $method.returnType$ $method.name$($method.parameters : {parameter | $parameter.type$ $parameter.name$}; separator=", "$);
    }; separator="\n"$
}
>>